{"ast":null,"code":"var _jsxFileName = \"/Users/dinajarkas/fportfolio/src/Pages/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  const initialValues = {\n    name: \"\",\n    email: \"\"\n  };\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleChange = e => {\n    // console.log(e.target);\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n    console.log(formValues);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n  };\n\n  useEffect(() => {\n    console.log(formErrors);\n\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(formValues);\n    }\n  }, [formErrors]);\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.name) {\n      errors.name = \"Name is required!\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"con\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contact Me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), Object.keys(formErrors).length === 0 && isSubmit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui message success\",\n          children: \"Sent!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"fname\",\n            id: \"name\",\n            placeholder: \" First Name\",\n            value: formValues.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            placeholder: \" Last Name\",\n            value: formValues.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Email\",\n            value: formValues.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            id: \"message\",\n            cols: \"30\",\n            rows: \"10\",\n            placeholder: \"Leave us a comment here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            ClassName: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contact, \"+RVuQagXWuMGIFoIbfIwlZ6DgN0=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/dinajarkas/fportfolio/src/Pages/Contact.js"],"names":["React","useState","useEffect","Contact","initialValues","name","email","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChange","e","value","target","console","log","handleSubmit","preventDefault","validate","Object","keys","length","values","errors","regex","test"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport '../App.css';\n\nfunction Contact() {\n  const initialValues = { name: \"\", email: \"\" };\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleChange = (e) => {\n    // console.log(e.target);\n    const { name, value } = e.target;\n    setFormValues({ ...formValues, [name]: value });\n    console.log(formValues);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n  };\n\n  useEffect(() => {\n    console.log(formErrors);\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(formValues);\n    }\n  }, [formErrors]);\n\n  const validate = (values) => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    if (!values.name) {\n      errors.name = \"Name is required!\";\n    }\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n    return errors;\n  };\n\n  return (\n    <>\n\n      <body>\n\n        <header>\n          <h1>Contact</h1>\n        </header>\n\n        <div class=\"con\">\n\n          <h2>Contact Me!</h2>\n          {Object.keys(formErrors).length === 0 && isSubmit ?\n            (<div className=\"ui message success\">Sent!</div>\n            ) : (\n              <div> </div>\n            )}\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"fname\"\n              id=\"name\"\n              placeholder=\" First Name\"\n              value={formValues.name}\n              onChange={handleChange} />\n            <p>{formErrors.name}</p>\n\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\" Last Name\"\n              value={formValues.name}\n              onChange={handleChange} />\n            <p>{formErrors.name}</p>\n\n            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" value={formValues.email} onChange={handleChange} />\n            <p>{formErrors.email}</p>\n\n            <textarea name=\"message\" id=\"message\" cols=\"30\" rows=\"10\" placeholder=\"Leave us a comment here\"></textarea>\n            <button ClassName=\"submit\">Send</button>\n          </form>\n        </div>\n\n\n      </body>\n\n    </>\n  );\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}